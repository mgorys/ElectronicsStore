// <auto-generated />
using ElectronicsStore.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ElectronicsStore.Persistence.Migrations
{
    [DbContext(typeof(EStoreDbContext))]
    partial class EStoreDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ElectronicsStore.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Phones"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Devices"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Accesories"
                        });
                });

            modelBuilder.Entity("ElectronicsStore.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdCategory")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("IdCategory");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IdCategory = 1,
                            Name = "Apple iPhone 13 Pro Max Graphite",
                            Price = 109.99m
                        },
                        new
                        {
                            Id = 2,
                            IdCategory = 1,
                            Name = "OnePlus 9 5G Astral Black 120Hz",
                            Price = 89.99m
                        },
                        new
                        {
                            Id = 3,
                            IdCategory = 1,
                            Name = "Samsung Galaxy S21 FE 5G Fan Edition Grey",
                            Price = 99.99m
                        },
                        new
                        {
                            Id = 4,
                            IdCategory = 2,
                            Name = "Apple iPad Pro 12,9\" M1 Wi - Fi Space Gray",
                            Price = 119.99m
                        },
                        new
                        {
                            Id = 5,
                            IdCategory = 3,
                            Name = "Silver Monkey Kabel USB 3.0 - USB-C 1,2m",
                            Price = 9.99m
                        },
                        new
                        {
                            Id = 6,
                            IdCategory = 3,
                            Name = "Microsoft 1850 Wireless Mobile Mouse",
                            Price = 29.99m
                        },
                        new
                        {
                            Id = 7,
                            IdCategory = 3,
                            Name = "NuPhy Air75 Red, Gateron",
                            Price = 9.99m
                        },
                        new
                        {
                            Id = 8,
                            IdCategory = 2,
                            Name = "Xiaomi Pad 5 6/128GB Cosmic Gray 120Hz",
                            Price = 69.99m
                        },
                        new
                        {
                            Id = 9,
                            IdCategory = 2,
                            Name = "Samsung Galaxy Tab A8 X200 WiFi 4/64GB srebrny",
                            Price = 89.99m
                        },
                        new
                        {
                            Id = 10,
                            IdCategory = 2,
                            Name = "Huawei MatePad Paper 4/64GB WiFi ",
                            Price = 89.99m
                        },
                        new
                        {
                            Id = 11,
                            IdCategory = 3,
                            Name = "ASUS RT-AC51 (750Mb/s a/b/g/n/ac)",
                            Price = 29.99m
                        });
                });

            modelBuilder.Entity("ElectronicsStore.Entities.Product", b =>
                {
                    b.HasOne("ElectronicsStore.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("IdCategory")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
