// <auto-generated />
using ElectronicsStore.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ElectronicsStore.Persistence.Migrations
{
    [DbContext(typeof(EStoreDbContext))]
    [Migration("20221222113956_img")]
    partial class img
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ElectronicsStore.Entities.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Apple"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Samsung"
                        },
                        new
                        {
                            Id = 3,
                            Name = "NoName"
                        });
                });

            modelBuilder.Entity("ElectronicsStore.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Phones"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Devices"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Accesories"
                        });
                });

            modelBuilder.Entity("ElectronicsStore.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdBrand")
                        .HasColumnType("int");

                    b.Property<int>("IdCategory")
                        .HasColumnType("int");

                    b.Property<string>("ImgUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("IdBrand");

                    b.HasIndex("IdCategory");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IdBrand = 1,
                            IdCategory = 1,
                            ImgUrl = "https://media.4rgos.it/s/Argos/9520103_R_SET?$Main768$&w=620&h=620",
                            Name = "iPhone 13 Pro Max",
                            Price = 109.99m
                        },
                        new
                        {
                            Id = 2,
                            IdBrand = 3,
                            IdCategory = 1,
                            ImgUrl = "https://auspost.com.au/shop/static/WFS/AusPost-Shop-Site/-/AusPost-Shop-auspost-B2CWebShop/en_AU/feat-cat/mobile-phones/always-on/category-tiles/MP_UnlockedPhones_3.jpg",
                            Name = "OnePlus 9",
                            Price = 89.99m
                        },
                        new
                        {
                            Id = 3,
                            IdBrand = 2,
                            IdCategory = 1,
                            ImgUrl = "https://www.optus.com.au/content/dam/optus/images/shop/prepaid/phones/optus/optus-x-pro-2/product-tile/OptusXPro2-front-listings.png/renditions/version-1652263444394/original.png",
                            Name = "Galaxy S21 FE",
                            Price = 99.99m
                        },
                        new
                        {
                            Id = 12,
                            IdBrand = 1,
                            IdCategory = 1,
                            ImgUrl = "https://dam.which.co.uk/IC20006-0248-00-front-2000x1500.jpg",
                            Name = "iPhone 14 Pro Max",
                            Price = 129.99m
                        },
                        new
                        {
                            Id = 13,
                            IdBrand = 1,
                            IdCategory = 1,
                            ImgUrl = "https://ss73.vzw.com/is/image/VerizonWireless/iphone-14-pro-max-deep-purple-fall22-a",
                            Name = "iPhone 13",
                            Price = 99.99m
                        },
                        new
                        {
                            Id = 14,
                            IdBrand = 1,
                            IdCategory = 1,
                            ImgUrl = "https://media.very.co.uk/i/very/V8YI2_SQ1_0000000039_PURPLE_SLf/apple-iphone-14-128gb--nbsppurple.jpg?$180x240_retinamobilex2$&$roundel_very$&p1_img=blank_apple&fmt=webp",
                            Name = "iPhone 11",
                            Price = 69.99m
                        },
                        new
                        {
                            Id = 15,
                            IdBrand = 1,
                            IdCategory = 1,
                            ImgUrl = "https://media.very.co.uk/i/very/V8YI2_SQ1_0000000039_PURPLE_SLf/apple-iphone-14-128gb--nbsppurple.jpg?$180x240_retinamobilex2$&$roundel_very$&p1_img=blank_apple&fmt=webp",
                            Name = "iPhone 12",
                            Price = 89.99m
                        },
                        new
                        {
                            Id = 16,
                            IdBrand = 1,
                            IdCategory = 1,
                            ImgUrl = "https://c.cfjump.com/Products/60101/168787539.jpg",
                            Name = "iPhone 12 Max",
                            Price = 95.99m
                        },
                        new
                        {
                            Id = 4,
                            IdBrand = 1,
                            IdCategory = 2,
                            ImgUrl = "https://cdn.shopify.com/s/files/1/0024/9803/5810/products/580985-Product-0-I-637824105177767213.jpg?v=1653610190",
                            Name = "iPad Pro 12,9",
                            Price = 119.99m
                        },
                        new
                        {
                            Id = 5,
                            IdBrand = 3,
                            IdCategory = 3,
                            ImgUrl = "https://m.media-amazon.com/images/I/61i6ys+InzL._SL1500_.jpg",
                            Name = "Silver Monkey Kabel",
                            Price = 9.99m
                        },
                        new
                        {
                            Id = 6,
                            IdBrand = 3,
                            IdCategory = 3,
                            ImgUrl = "https://i.dell.com/is/image/DellContent/content/dam/ss2/product-images/peripherals/alienware/peripherals/alienware-trimode-720m-wireless-mouse/assets/mouse-aw720m-wh-gallery-1.psd?fmt=pjpg&pscan=auto&scl=1&wid=4277&hei=3022&qlt=100,1&resMode=sharp2&size=4277,3022&chrss=full&imwidth=5000",
                            Name = "Microsoft 1850 Mouse",
                            Price = 29.99m
                        },
                        new
                        {
                            Id = 7,
                            IdBrand = 3,
                            IdCategory = 3,
                            ImgUrl = "https://m.media-amazon.com/images/I/61KSceiLHwL._SL1500_.jpg",
                            Name = "NuPhy Air75 Red, Gateron",
                            Price = 9.99m
                        },
                        new
                        {
                            Id = 8,
                            IdBrand = 3,
                            IdCategory = 2,
                            ImgUrl = "https://store.storeimages.cdn-apple.com/4668/as-images.apple.com/is/refurb-ipad-air-wifi-gold-2021?wid=1144&hei=1144&fmt=jpeg&qlt=90&.v=1644268571040",
                            Name = "Xiaomi Pad 5",
                            Price = 69.99m
                        },
                        new
                        {
                            Id = 9,
                            IdBrand = 2,
                            IdCategory = 2,
                            ImgUrl = "https://store.storeimages.cdn-apple.com/4668/as-images.apple.com/is/refurb-ipad-pro-11-wifi-spacegray-2019?wid=1200&hei=630&fmt=jpeg&qlt=95&.v=1581985486323",
                            Name = "Galaxy Tab A8",
                            Price = 89.99m
                        },
                        new
                        {
                            Id = 10,
                            IdBrand = 3,
                            IdCategory = 2,
                            ImgUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQi38H3UrC4gGGRVE_NyPu4hhpQJTBpF0DskBVCK0nJ6JwlA8E813eCPMfdHWNv7kOlsF8&usqp=CAU",
                            Name = "Huawei MatePad Paper",
                            Price = 89.99m
                        },
                        new
                        {
                            Id = 11,
                            IdBrand = 3,
                            IdCategory = 3,
                            ImgUrl = "https://store.storeimages.cdn-apple.com/4668/as-images.apple.com/is/refurb-ipad-cell-gold-2020?wid=2000&hei=2000&fmt=jpeg&qlt=95&.v=1626465470000",
                            Name = "ASUS RT-AC51",
                            Price = 29.99m
                        });
                });

            modelBuilder.Entity("ElectronicsStore.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ElectronicsStore.Entities.Product", b =>
                {
                    b.HasOne("ElectronicsStore.Entities.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("IdBrand")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ElectronicsStore.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("IdCategory")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
